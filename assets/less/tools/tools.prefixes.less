// Vendor Prefixes
// http://getbootstrap.com/

// - Animations
// - Backface visibility
// - Box shadow
// - Box sizing
// - Content columns
// - Hyphens
// - Placeholder text
// - Transformations
// - Transitions
// - User Select
// TODO: nahradit za PostCSS


// Animations
.Animation(@animation) {
	-webkit-animation: @animation;
	-o-animation: @animation;
	animation: @animation;
}
.AnimationName(@name) {
	-webkit-animation-name: @name;
	animation-name: @name;
}
.AnimationDuration(@duration) {
	-webkit-animation-duration: @duration;
	animation-duration: @duration;
}
.AnimationTimingFunction(@timing-function) {
	-webkit-animation-timing-function: @timing-function;
	animation-timing-function: @timing-function;
}
.AnimationDelay(@delay) {
	-webkit-animation-delay: @delay;
	animation-delay: @delay;
}
.AnimationIterationCount(@iteration-count) {
	-webkit-animation-iteration-count: @iteration-count;
	animation-iteration-count: @iteration-count;
}
.AnimationDirection(@direction) {
	-webkit-animation-direction: @direction;
	animation-direction: @direction;
}
.AnimationFillMode(@fill-mode) {
	-webkit-animation-fill-mode: @fill-mode;
	animation-fill-mode: @fill-mode;
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden`

.Backface-visibility(@visibility){
	-webkit-backface-visibility: @visibility;
	-moz-backface-visibility: @visibility;
	backface-visibility: @visibility;
}

// Drop shadows
//
// Note: Deprecated `.Box-shadow()` as of v3.1.0 since all of Bootstrap's
// supported browsers that have box shadow capabilities now support it.

.BoxShadow(@shadow) {
	-webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
	box-shadow: @shadow;
}

// Box sizing
.BoxSizing(@boxmodel) {
	-webkit-box-sizing: @boxmodel;
	-moz-box-sizing: @boxmodel;
	box-sizing: @boxmodel;
}

// CSS3 Content Columns
.ContentColumns(@column-count; @column-gap: @grid-gutter-width) {
	-webkit-column-count: @column-count;
	-moz-column-count: @column-count;
	column-count: @column-count;
	-webkit-column-gap: @column-gap;
	-moz-column-gap: @column-gap;
	column-gap: @column-gap;
}

// Optional hyphenation
.Hyphens(@mode: auto) {
	word-wrap: break-word;
	-webkit-hyphens: @mode;
	-moz-hyphens: @mode;
	-ms-hyphens: @mode; // IE10+
	-o-hyphens: @mode;
	hyphens: @mode;
}

// Placeholder text
.Placeholder(@color: @input-color-placeholder) {
	// Firefox
	&::-moz-placeholder {
		color: @color;
		opacity: 1; // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526
	}
	&:-ms-input-placeholder { color: @color; } // Internet Explorer 10+
	&::-webkit-input-placeholder  { color: @color; } // Safari and Chrome
}

// Transformations
.Scale(@ratio) {
	-webkit-transform: scale(@ratio);
	-ms-transform: scale(@ratio); // IE9 only
	-o-transform: scale(@ratio);
	transform: scale(@ratio);
}
.Scale(@ratioX; @ratioY) {
	-webkit-transform: scale(@ratioX, @ratioY);
	-ms-transform: scale(@ratioX, @ratioY); // IE9 only
	-o-transform: scale(@ratioX, @ratioY);
	transform: scale(@ratioX, @ratioY);
}
.ScaleX(@ratio) {
	-webkit-transform: scaleX(@ratio);
	-ms-transform: scaleX(@ratio); // IE9 only
	-o-transform: scaleX(@ratio);
	transform: scaleX(@ratio);
}
.ScaleY(@ratio) {
	-webkit-transform: scaleY(@ratio);
	-ms-transform: scaleY(@ratio); // IE9 only
	-o-transform: scaleY(@ratio);
	transform: scaleY(@ratio);
}
.Skew(@x; @y) {
	-webkit-transform: skewX(@x) skewY(@y);
	-ms-transform: skewX(@x) skewY(@y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
	-o-transform: skewX(@x) skewY(@y);
	transform: skewX(@x) skewY(@y);
}
.Translate(@x; @y) {
	-webkit-transform: translate(@x, @y);
	-ms-transform: translate(@x, @y); // IE9 only
	-o-transform: translate(@x, @y);
	transform: translate(@x, @y);
}
.Translate3d(@x; @y; @z) {
	-webkit-transform: translate3d(@x, @y, @z);
	transform: translate3d(@x, @y, @z);
}
.Rotate(@degrees) {
	-webkit-transform: rotate(@degrees);
	-ms-transform: rotate(@degrees); // IE9 only
	-o-transform: rotate(@degrees);
	transform: rotate(@degrees);
}
.RotateX(@degrees) {
	-webkit-transform: rotateX(@degrees);
	-ms-transform: rotateX(@degrees); // IE9 only
	-o-transform: rotateX(@degrees);
	transform: rotateX(@degrees);
}
.RotateY(@degrees) {
	-webkit-transform: rotateY(@degrees);
	-ms-transform: rotateY(@degrees); // IE9 only
	-o-transform: rotateY(@degrees);
	transform: rotateY(@degrees);
}
.Perspective(@perspective) {
	-webkit-perspective: @perspective;
	-moz-perspective: @perspective;
	perspective: @perspective;
}
.PerspectiveOrigin(@perspective) {
	-webkit-perspective-origin: @perspective;
	-moz-perspective-origin: @perspective;
	perspective-origin: @perspective;
}
.TransformOrigin(@origin) {
	-webkit-transform-origin: @origin;
	-moz-transform-origin: @origin;
	-ms-transform-origin: @origin; // IE9 only
	transform-origin: @origin;
}
.TransformBase(@content) {
	-webkit-transform: @content;
	-ms-transform: @content; // IE9 only
	-o-transform: @content;
	transform: @content;
}


// Transitions

.Transition(@transition) {
	-webkit-transition: @transition;
	-ms-transition: @transition;
	-o-transition: @transition;
	transition: @transition;
}
.TransitionTransform(@time) { 
	-webkit-transition: ~'-webkit-transform @{time}';
	-moz-transition: ~'-moz-transform @{time}';
	-ms-transition: ~'-ms-transform @{time}';
	-o-transition: ~'-o-transform @{time}';
	transition: ~'transform @{time}';
}
.TransitionProperty(@transition-property) {
	-webkit-transition-property: @transition-property;
	transition-property: @transition-property;
}
.TransitionDelay(@transition-delay) {
	-webkit-transition-delay: @transition-delay;
	transition-delay: @transition-delay;
}
.TransitionDuration(@transition-duration) {
	-webkit-transition-duration: @transition-duration;
	transition-duration: @transition-duration;
}
.TransitionTimingFunction(@timing-function) {
	-webkit-transition-timing-function: @timing-function;
	transition-timing-function: @timing-function;
}
.TransitionTransform(@transition) {
	-webkit-transition: -webkit-transform @transition;
	-moz-transition: -moz-transform @transition;
	-o-transition: -o-transform @transition;
	transition: transform @transition;
}


// User select
// For selecting text on the page

.UserSelect(@select) {
	-webkit-touch-callout: @select;
	-webkit-user-select: @select;
	-moz-user-select: @select;
	-ms-user-select: @select; // IE10+
	user-select: @select;
}

// Velikost obrázku na pozadí
.BackgroundSize(@size) {
	-webkit-background-size: @size;
	background-size: @size;
}

// Flexbox
.DisplayFlex(@display, @justify, @direction) {	
	display: ~'-webkit-@{display}';
	display: ~'-moz-@{display}';
	display: @display;	

	-moz-flex-direction: @justify;
	-webkit-flex-direction: @justify;
	flex-direction: @justify;

	-moz-justify-content: @direction;
	-webkit-justify-content: @direction;
	justify-content: @direction;
}

.Flexbox() {
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flexbox;
	display: flex;	
}

.FlexboxInline() {
	display: -webkit-inline-flex;
	display: -moz-inline-flex;
	display: -ms-inline-flexbox;
	display: inline-flex;	
}

.FlexDirection(@direction) {
	-moz-flex-direction: @direction;
	-webkit-flex-direction: @direction;
	-ms-flex-direction: @direction;
	flex-direction: @direction;
}

.FlexJustify(@justify) {
	-moz-justify-content: @justify;
	-webkit-justify-content: @justify;
	-ms-flex-pack: @justify;
	justify-content: @justify;	
}

.AlignSelf(@align) {
	-webkit-align-self: @align;
	-ms-flex-align: @align;
	align-self: @align;
}

.AlignItems(@align) {
	-webkit-align-items: @align;
	-ms-flex-align: @align;
	align-items: @align;
}

.FlexShrink(@value) {
	-webkit-flex-shrink: @value;
	-ms-flex-negative: @value;
	flex-shrink: @value;
}

.FlexGrow(@value) {
	-webkit-flex-grow: @value;
	-ms-flex-positive: @value;
	flex-grow: @value;
}

.FlexWrap(@value) {
	-webkit-flex-wrap: @value;
	-ms-flex-wrap: @value;
	flex-wrap: @value;
}

/* Object fit [fill | contain | cover | none | scale-down] */
.ObjectFit(@value) {
	-o-object-fit: @value;
	object-fit: @value;	
}

/* Object position */
.ObjectPosition(@value) {
	-o-object-position: @value;
	object-position: @value;	
}

/* Filter blur in pixels */
.FilterBlur(@value) {
	filter: blur(~"@{value}px");
	-webkit-filter: blur(~"@{value}px");
	-ms-filter: blur(~"@{value}px");
	filter:progid:DXImageTransform.Microsoft.Blur(PixelRadius='@{value}'); 
}

